{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\";\nimport Axios from 'axios';\nexport const addToCart = (productId, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await Axios.get(`/api/products/${productId}`);\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n\n  if (cartItems.length > 0 && data.seller._id !== cartItems[0].seller._id) {\n    dispatch({\n      type: CART_ADD_ITEM_FAIL,\n      payload: `Can't Add To Cart. Buy only from ${cartItems[0].seller.seller.name} in this order`\n    });\n  } else {\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        product: data._id,\n        seller: data.seller,\n        qty\n      }\n    });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n  }\n};\nexport const removeFromCart = productId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  localStorage.setItem('certItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/GoMyCode/Projet/frontend/src/actions/cartActions.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_SHIPPING_ADDRESS","Axios","addToCart","productId","qty","dispatch","getState","data","get","cart","cartItems","length","seller","_id","type","CART_ADD_ITEM_FAIL","payload","name","image","price","countInStock","product","localStorage","setItem","JSON","stringify","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,EAA0CC,wBAA1C,EAAoEC,0BAApE,QAAsG,4BAAtG;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAE,CAACC,SAAD,EAAWC,GAAX,KAAmB,OAAMC,QAAN,EAAiBC,QAAjB,KAA8B;AAEzE,QAAM;AAACC,IAAAA;AAAD,MAAO,MAAMN,KAAK,CAACO,GAAN,CAAW,iBAAgBL,SAAU,EAArC,CAAnB;AAEA,QAAM;AACFM,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADJ,MAEAJ,QAAQ,EAFd;;AAGE,MAAII,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBJ,IAAI,CAACK,MAAL,CAAYC,GAAZ,KAAoBH,SAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoBC,GAApE,EAAyE;AACvER,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEC,kBADC;AAEPC,MAAAA,OAAO,EAAG,oCAAmCN,SAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoBA,MAApB,CAA2BK,IAAK;AAFtE,KAAD,CAAR;AAID,GALD,MAKO;AACLZ,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEjB,aADC;AAEPmB,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAEV,IAAI,CAACU,IADJ;AAEPC,QAAAA,KAAK,EAAEX,IAAI,CAACW,KAFL;AAGPC,QAAAA,KAAK,EAAEZ,IAAI,CAACY,KAHL;AAIPC,QAAAA,YAAY,EAAEb,IAAI,CAACa,YAJZ;AAKPC,QAAAA,OAAO,EAAEd,IAAI,CAACM,GALP;AAMPD,QAAAA,MAAM,EAAEL,IAAI,CAACK,MANN;AAOPR,QAAAA;AAPO;AAFF,KAAD,CAAR;AAYAkB,IAAAA,YAAY,CAACC,OAAb,CACE,WADF,EAEEC,IAAI,CAACC,SAAL,CAAenB,QAAQ,GAAGG,IAAX,CAAgBC,SAA/B,CAFF;AAID;AAIF,CAjCM;AAmCP,OAAO,MAAMgB,cAAc,GAAGvB,SAAD,IAAe,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAChED,EAAAA,QAAQ,CAAC;AAACS,IAAAA,IAAI,EAAEhB,gBAAP;AAA0BkB,IAAAA,OAAO,EAAEb;AAAnC,GAAD,CAAR;AACAmB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAenB,QAAQ,GAAGG,IAAX,CAAgBC,SAA/B,CAAlC;AACH,CAHM;AAKP,OAAO,MAAMiB,mBAAmB,GAAIpB,IAAD,IAAWF,QAAD,IAAc;AAC3DA,EAAAA,QAAQ,CAAC;AAACS,IAAAA,IAAI,EAAEd,0BAAP;AAAoCgB,IAAAA,OAAO,EAAET;AAA7C,GAAD,CAAR;AACAe,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAyCC,IAAI,CAACC,SAAL,CAAelB,IAAf,CAAzC;AACC,CAHM;AAMP,OAAO,MAAMqB,iBAAiB,GAAIrB,IAAD,IAAWF,QAAD,IAAc;AACrDA,EAAAA,QAAQ,CAAC;AAACS,IAAAA,IAAI,EAAEf,wBAAP;AAAiCiB,IAAAA,OAAO,EAAET;AAA1C,GAAD,CAAR;AACH,CAFM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\";\r\nimport Axios from 'axios';\r\n\r\nexport const addToCart =(productId,qty) => async(dispatch , getState) => {\r\n\r\nconst {data}=await Axios.get(`/api/products/${productId}`);\r\n\r\nconst {\r\n    cart: { cartItems },\r\n  } = getState();\r\n  if (cartItems.length > 0 && data.seller._id !== cartItems[0].seller._id) {\r\n    dispatch({\r\n      type: CART_ADD_ITEM_FAIL,\r\n      payload: `Can't Add To Cart. Buy only from ${cartItems[0].seller.seller.name} in this order`,\r\n    });\r\n  } else {\r\n    dispatch({\r\n      type: CART_ADD_ITEM,\r\n      payload: {\r\n        name: data.name,\r\n        image: data.image,\r\n        price: data.price,\r\n        countInStock: data.countInStock,\r\n        product: data._id,\r\n        seller: data.seller,\r\n        qty,\r\n      },\r\n    });\r\n    localStorage.setItem(\r\n      'cartItems',\r\n      JSON.stringify(getState().cart.cartItems)\r\n    );\r\n  }\r\n\r\n\r\n\r\n};\r\n\r\nexport const removeFromCart= (productId) => (dispatch, getState) => {\r\n    dispatch({type: CART_REMOVE_ITEM , payload: productId });\r\n    localStorage.setItem('certItems', JSON.stringify(getState().cart.cartItems));\r\n}; \r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\ndispatch({type: CART_SAVE_SHIPPING_ADDRESS , payload: data})\r\nlocalStorage.setItem('shippingAddress' , JSON.stringify(data));\r\n};\r\n\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({type: CART_SAVE_PAYMENT_METHOD, payload: data });\r\n}"]},"metadata":{},"sourceType":"module"}