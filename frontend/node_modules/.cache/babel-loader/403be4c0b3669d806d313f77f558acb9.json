{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\GoMyCode\\\\Projet\\\\frontend\\\\src\\\\screens\\\\OrderHistoryScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderHistoryScreen(props) {\n  _s();\n\n  const orderMineList = useSelector(state => state.orderMineList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderMineList;\n  const dispatch = useDispatch();\n  use;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Historique\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"totale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"pay\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"delivr\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.createdAt.subString(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.isPaid ? order.paidAt.subString(0, 10) : 'Non'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.isDelivered ? order.deliveredAt.subString(0, 10) : 'Non'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"small\",\n              onClick: () => {\n                props.history.push(`/order/${order._id}`);\n              },\n              children: \"Detailles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 4\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 1\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderHistoryScreen, \"DHTkYmZCWXdZ3ddmd/+gdkX/rBw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = OrderHistoryScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderHistoryScreen\");","map":{"version":3,"sources":["C:/Users/User/Desktop/GoMyCode/Projet/frontend/src/screens/OrderHistoryScreen.js"],"names":["React","useDispatch","useSelector","LoadingBox","MessageBox","OrderHistoryScreen","props","orderMineList","state","loading","error","orders","dispatch","use","map","order","_id","createdAt","subString","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAE/C,QAAMC,aAAa,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAAjC;AACA,QAAM;AAACE,IAAAA,OAAD;AAAWC,IAAAA,KAAX;AAAiBC,IAAAA;AAAjB,MAA2BJ,aAAjC;AACA,QAAMK,QAAQ,GAAGX,WAAW,EAA5B;AACAY,EAAAA,GAAG;AACF,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKJ,OAAO,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GACRC,KAAK,gBAAC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAD,gBAID;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BAChB;AAAA,+BACA;AAAA,kCAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADgB,eAahB;AAAA,kBACCC,MAAM,CAACG,GAAP,CAAYC,KAAD,iBACZ;AAAA,kCACG;AAAA,sBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG;AAAA,sBAAKD,KAAK,CAACE,SAAN,CAAgBC,SAAhB,CAA0B,CAA1B,EAA4B,EAA5B;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFH,eAGG;AAAA,sBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,kBAHH,eAIG;AAAA,sBAAKJ,KAAK,CAACK,MAAN,GAAcL,KAAK,CAACM,MAAN,CAAaH,SAAb,CAAuB,CAAvB,EAAyB,EAAzB,CAAd,GAA4C;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAJH,eAKG;AAAA,sBAAKH,KAAK,CAACO,WAAN,GAAmBP,KAAK,CAACQ,WAAN,CAAkBL,SAAlB,CAA4B,CAA5B,EAA8B,EAA9B,CAAnB,GAAsD;AAA3D;AAAA;AAAA;AAAA;AAAA,kBALH,eAMG;AAAA,mCAAI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,OAAhC;AACJ,cAAA,OAAO,EAAE,MAAK;AAACZ,gBAAAA,KAAK,CAACkB,OAAN,CAAcC,IAAd,CAAoB,UAASV,KAAK,CAACC,GAAI,EAAvC;AAA0C,eADrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBANH;AAAA,WAAUD,KAAK,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,gBADC;AADD;AAAA;AAAA;AAAA;AAAA,cAbgB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkDH;;GAxDuBX,kB;UAECH,W,EAELD,W;;;KAJII,kB","sourcesContent":["import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function OrderHistoryScreen(props) {\r\n   \r\n   const orderMineList = useSelector(state => state.orderMineList);\r\n   const {loading , error,orders} = orderMineList;\r\n   const dispatch = useDispatch();\r\n   use\r\n    return (\r\n        <div>\r\n            <h1>Historique</h1>\r\n            {loading?  <LoadingBox></LoadingBox>:\r\n            error?<MessageBox variant=\"danger\">{error}</MessageBox>\r\n            : \r\n            (\r\n\r\n                <table className=\"table\">\r\n<thead>\r\n<tr>\r\n\r\n<th>ID</th>\r\n<th>date</th>\r\n<th>totale</th>\r\n<th>payé</th>\r\n<th>delivré</th>\r\n<th>actions</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n{orders.map((order) =>(\r\n<tr key= {order._id}>\r\n   <td>{order._id}</td>\r\n   <td>{order.createdAt.subString(0,10)}</td>\r\n   <td>{order.totalPrice}</td>\r\n   <td>{order.isPaid? order.paidAt.subString(0,10): 'Non'}</td>\r\n   <td>{order.isDelivered? order.deliveredAt.subString(0,10): 'Non'}</td>\r\n   <td><button type=\"button\" className=\"small\"\r\n   onClick={()=> {props.history.push(`/order/${order._id}`)}}>\r\n       Detailles\r\n       </button>\r\n       </td>\r\n    </tr>\r\n\r\n\r\n))}\r\n\r\n</tbody>\r\n\r\n\r\n\r\n\r\n</table>\r\n            )\r\n            \r\n            }\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}