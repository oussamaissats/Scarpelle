{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\GoMyCode\\\\Projet\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileScreen() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [sellerName, setSellerName] = useState('');\n  const [sellerLogo, setSellerLogo] = useState('');\n  const [sellerDescription, setSellerDescription] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = userUpdateProfile;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_RESET\n      });\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n\n      if (user.seller) {\n        setSellerName(user.seller.name);\n        setSellerLogo(user.seller.logo);\n        setSellerDescription(user.seller.description);\n      }\n    }\n  }, [dispatch, userInfo._id, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Les mots de passe ne sont pas compatibles ');\n    } else {\n      dispatch(updateUserProfile({\n        userId: user._id,\n        name,\n        email,\n        password,\n        sellerName,\n        sellerLogo,\n        sellerDescription\n      }));\n    }\n\n    ;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"User Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n            variant: \"danger\",\n            children: errorUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), successUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n            variant: \"success\",\n            children: \"Profile Updated Successfully\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"name\",\n              type: \"text\",\n              placeholder: \"Enter name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              type: \"email\",\n              placeholder: \"Enter email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              type: \"password\",\n              placeholder: \"Enter password\",\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"confirmPassword\",\n              type: \"password\",\n              placeholder: \"Enter confirm password\",\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), user.isSeller && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Seller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"sellerName\",\n                children: \"Seller Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"sellerName\",\n                type: \"text\",\n                placeholder: \"Enter Seller Name\",\n                value: sellerName,\n                onChange: e => setSellerName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"sellerLogo\",\n                children: \"Seller Logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"sellerLogo\",\n                type: \"text\",\n                placeholder: \"Enter Seller Logo\",\n                value: sellerLogo,\n                onChange: e => setSellerLogo(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"sellerDescription\",\n                children: \"Seller Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"sellerDescription\",\n                type: \"text\",\n                placeholder: \"Enter Seller Description\",\n                value: sellerDescription,\n                onChange: e => setSellerDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"primary\",\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n}\n\n_s(ProfileScreen, \"d+XesbgDd72x8RwmY6WkTDiV1P0=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/User/Desktop/GoMyCode/Projet/frontend/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","sellerName","setSellerName","sellerLogo","setSellerLogo","sellerDescription","setSellerDescription","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","success","successUpdate","errorUpdate","loadingUpdate","dispatch","type","_id","seller","logo","description","submitHandler","e","preventDefault","alert","userId","target","value","isSeller"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\n\r\nexport default function ProfileScreen() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [sellerName, setSellerName] = useState('');\r\n  const [sellerLogo, setSellerLogo] = useState('');\r\n  const [sellerDescription, setSellerDescription] = useState('');\r\n\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\nconst userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\nconst {success : successUpdate , error: errorUpdate , loading : loadingUpdate } = userUpdateProfile;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!user) {\r\n      dispatch({type: USER_UPDATE_PROFILE_RESET});\r\n      dispatch(detailsUser(userInfo._id));\r\n    } else {\r\n setName(user.name);\r\n setEmail(user.email);\r\n if (user.seller) {\r\n  setSellerName(user.seller.name);\r\n  setSellerLogo(user.seller.logo);\r\n  setSellerDescription(user.seller.description);\r\n}\r\n\r\n    }\r\n   \r\n  }, [dispatch, userInfo._id, user]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword){\r\nalert('Les mots de passe ne sont pas compatibles ');\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          userId: user._id,\r\n          name,\r\n          email,\r\n          password,\r\n          sellerName,\r\n          sellerLogo,\r\n          sellerDescription,\r\n        })\r\n      );\r\n  };\r\n  return (\r\n  \r\n      <div>\r\n        <form className=\"form\" onSubmit={submitHandler}>\r\n          <div>\r\n            <h1>User Profile</h1>\r\n          </div>\r\n          {loading ? (\r\n            <LoadingBox></LoadingBox>\r\n          ) : error ? (\r\n            <MessageBox variant=\"danger\">{error}</MessageBox>\r\n          ) : (\r\n            <>\r\n              {loadingUpdate && <LoadingBox></LoadingBox>}\r\n              {errorUpdate && (\r\n                <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\r\n              )}\r\n              {successUpdate && (\r\n                <MessageBox variant=\"success\">\r\n                  Profile Updated Successfully\r\n                </MessageBox>\r\n              )}\r\n              <div>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"confirmPassword\">confirm Password</label>\r\n                <input\r\n                  id=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  placeholder=\"Enter confirm password\"\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              {user.isSeller && (\r\n                <>\r\n                  <h2>Seller</h2>\r\n                  <div>\r\n                    <label htmlFor=\"sellerName\">Seller Name</label>\r\n                    <input\r\n                      id=\"sellerName\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Seller Name\"\r\n                      value={sellerName}\r\n                      onChange={(e) => setSellerName(e.target.value)}\r\n                    ></input>\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"sellerLogo\">Seller Logo</label>\r\n                    <input\r\n                      id=\"sellerLogo\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Seller Logo\"\r\n                      value={sellerLogo}\r\n                      onChange={(e) => setSellerLogo(e.target.value)}\r\n                    ></input>\r\n                  </div>\r\n                  <div>\r\n                    <label htmlFor=\"sellerDescription\">Seller Description</label>\r\n                    <input\r\n                      id=\"sellerDescription\"\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Seller Description\"\r\n                      value={sellerDescription}\r\n                      onChange={(e) => setSellerDescription(e.target.value)}\r\n                    ></input>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <div>\r\n                <label />\r\n                <button className=\"primary\" type=\"submit\">\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </form>\r\n      </div>\r\n    \r\n  )\r\n              }\r\n            }"]},"metadata":{},"sourceType":"module"}