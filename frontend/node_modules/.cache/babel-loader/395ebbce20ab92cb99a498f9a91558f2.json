{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\";\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/GoMyCode/Projet/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","listProducts","dispatch","type","data","get","payload","error","message","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,sBAA9B,EAAsDC,sBAAtD,EAA8EC,oBAA9E,EACEC,sBADF,EAEEC,sBAFF,EAGEC,mBAHF,EAGuBC,uBAHvB,EAGgDC,uBAHhD,EAGyEC,iBAHzE,EAG4FC,oBAH5F,EAGkHC,oBAHlH,QAG8I,+BAH9I;AAMA,OAAO,MAAMC,YAAY,GAAG,MAAK,MAAOC,QAAP,IAAmB;AAEhDA,EAAAA,QAAQ,CAAC;AACbC,IAAAA,IAAI,EAAEJ;AADO,GAAD,CAAR;;AAIA,MAAI;AAEA,UAAM;AAACK,MAAAA;AAAD,QAAS,MAAMhB,KAAK,CAACiB,GAAN,CAAU,eAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEH,oBAAP;AAA6BM,MAAAA,OAAO,EAAGF;AAAvC,KAAD,CAAR;AAEH,GALD,CAKC,OAAMG,KAAN,EAAY;AAEjBL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,iBAAP;AAA0BQ,MAAAA,OAAO,EAACC,KAAK,CAACC;AAAxC,KAAD,CAAR;AAEK;AACJ,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAIC,SAAD,IAAe,MAAMR,QAAN,IAAkB;AAE/DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP,uBAAP;AAAiCU,IAAAA,OAAO,EAAEI;AAA1C,GAAD,CAAR;;AAEA,MAAG;AACH,UAAM;AAACN,MAAAA;AAAD,QAAS,MAAMhB,KAAK,CAACiB,GAAN,CAAW,iBAAgBK,SAAU,EAArC,CAArB;AACAR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,uBAAP;AAAgCS,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AAEC,GAJD,CAIE,OAAMG,KAAN,EAAY;AAEVL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEX,oBAAP;AACTc,MAAAA,OAAO,EAAEC,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OAAtC,GAAgDD,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OAApE,GACXD,KAAK,CAACC;AAFK,KAAD,CAAR;AAGH;AAEA,CAfM;AAgBP,OAAO,MAAMI,aAAa,GAAG,MAAM,OAAOV,QAAP,EAAiBW,QAAjB,KAA8B;AAC7DX,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEb;AAAR,GAAD,CAAR;AACA,QAAM;AACJwB,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAAC4B,IAAN,CACrB,eADqB,EAErB,EAFqB,EAGrB;AACEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AADX,KAHqB,CAAvB;AAOAjB,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,sBADC;AAEPe,MAAAA,OAAO,EAAEF,IAAI,CAACgB;AAFP,KAAD,CAAR;AAID,GAZD,CAYE,OAAOb,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEd,mBAAR;AAA6BiB,MAAAA,OAAO,EAAEE;AAAtC,KAAD,CAAR;AACD;AACF,CAxBI;AA0BL,OAAO,MAAMa,aAAa,GAAID,OAAD,IAAa,OAAOlB,QAAP,EAAiBW,QAAjB,KAA8B;AACtEX,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV,sBAAR;AAAgCa,IAAAA,OAAO,EAAEc;AAAzC,GAAD,CAAR;AACA,QAAM;AACJN,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEFF,QAAQ,EAFZ;;AAGA,MAAI;AACF,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAMhB,KAAK,CAACkC,GAAN,CAAW,iBAAgBF,OAAO,CAACG,GAAI,EAAvC,EAA0CH,OAA1C,EAAmD;AACxEH,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAA1C;AAD+D,KAAnD,CAAvB;AAGAjB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,sBAAR;AAAgCY,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACD,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,mBAAR;AAA6BY,MAAAA,KAAK,EAAEC;AAApC,KAAD,CAAR;AACD;AACF,CAjBM","sourcesContent":["import Axios from \"axios\";\r\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../constants/productConstants\"\r\n\r\n\r\nexport const listProducts = ()=> async (dispatch) =>{\r\n\r\n    dispatch({\r\ntype: PRODUCT_LIST_REQUEST\r\n\r\n    });\r\n    try {\r\n\r\n        const {data} = await Axios.get('/api/products');\r\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload : data});\r\n\r\n    }catch(error){\r\n\r\ndispatch({type: PRODUCT_LIST_FAIL, payload:error.message});\r\n\r\n    }\r\n};\r\n\r\nexport const detailsProduct = (productId) => async(dispatch)=> {\r\n\r\ndispatch({type: PRODUCT_DETAILS_REQUEST , payload: productId});\r\n\r\ntry{\r\nconst {data} = await Axios.get(`/api/products/${productId}`);\r\ndispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n\r\n} catch(error){\r\n\r\n    dispatch({type: PRODUCT_DETAILS_FAIL, \r\n    payload: error.response && error.response.data.message ? error.response.data.message\r\n: error.message,});\r\n}\r\n\r\n};\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.post(\r\n        '/api/products',\r\n        {},\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data.product,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  export const updateProduct = (product) => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      });\r\n      dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}