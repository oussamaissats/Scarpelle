{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from \"../constants/productConstants\";\nexport const listProducts = ({\n  seller = '',\n  name = '',\n  category = ''\n}) => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products?seller=${seller}&name=${name}&category=${category}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const listProductCategories = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_CATEGORY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/categories`);\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_DELETE_REQUEST,\n    payload: productId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/products/${productId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/GoMyCode/Projet/frontend/src/actions/productActions.js"],"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","listProducts","seller","name","category","dispatch","type","data","get","payload","error","message","listProductCategories","PRODUCT_CATEGORY_LIST_REQUEST","PRODUCT_CATEGORY_LIST_SUCCESS","PRODUCT_CATEGORY_LIST_FAIL","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","delete"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n\r\n  PRODUCT_UPDATE_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from \"../constants/productConstants\"\r\n\r\n\r\n  export const listProducts = ({\r\n     seller = '', name = '',  category = ''}) => async (dispatch) => {\r\n\r\n    dispatch({\r\ntype: PRODUCT_LIST_REQUEST\r\n\r\n    });\r\n    try {\r\n\r\n      const { data } = await Axios.get(\r\n        `/api/products?seller=${seller}&name=${name}&category=${category}`\r\n      );\r\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload : data});\r\n\r\n    }catch(error){\r\n\r\ndispatch({type: PRODUCT_LIST_FAIL, payload:error.message});\r\n\r\n    }\r\n};\r\n\r\nexport const listProductCategories = () => async (dispatch) => {\r\n  dispatch({\r\n    type: PRODUCT_CATEGORY_LIST_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await Axios.get(`/api/products/categories`);\r\n    dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const detailsProduct = (productId) => async(dispatch)=> {\r\n\r\ndispatch({type: PRODUCT_DETAILS_REQUEST , payload: productId});\r\n\r\ntry{\r\nconst {data} = await Axios.get(`/api/products/${productId}`);\r\ndispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n\r\n} catch(error){\r\n\r\n    dispatch({type: PRODUCT_DETAILS_FAIL, \r\n    payload: error.response && error.response.data.message ? error.response.data.message\r\n: error.message,});\r\n}\r\n\r\n};\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.post(\r\n        '/api/products',\r\n        {},\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data.product,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  export const updateProduct = (product) => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      });\r\n      dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n    }\r\n  };\r\n\r\n  export const deleteProduct = (productId) => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const {data}= Axios.delete(`/api/products/${productId}`, {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      });\r\n      dispatch({ type: PRODUCT_DELETE_SUCCESS , payload: data });\r\n\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n    }\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}