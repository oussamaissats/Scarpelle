{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/GoMyCode/Projet/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,4BAAhD;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAE;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAAR,EAAwBC,MAAxB,KAAiC;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,aAAL;AACA,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAGA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA5C,CAAlB;;AACA,UAAGH,SAAH,EAAa;AACjB,eAAM,EACF,GAAGN,KADD;AAEFC,UAAAA,SAAS,EAAGD,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAGA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAwCI,CAAhE;AAFV,SAAN;AAKK,OAND,MAMM;AACV,eAAO,EAAC,GAAGR,KAAJ;AAAYC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAvB,SAAP;AAEK;;AAED,SAAKN,gBAAL;AACI,aAAM,EAAC,GAAGE,KAAJ;AAAWC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBH,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAjD;AAAtB,OAAN;;AAIJ;AACA,aAAOL,KAAP;AArBJ;AAyBC,CA1BM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (state= {cartItems: []},action)=>{\r\nswitch(action.type) {\r\n    case CART_ADD_ITEM: \r\n    const item = action.payload; \r\n    const existItem = state.cartItems.find(x=> x.product === item.product);\r\n    if(existItem){\r\nreturn{\r\n    ...state, \r\n    cartItems : state.cartItems.map(x=> x.product === existItem.product ? item: x),\r\n};\r\n\r\n    } else{\r\nreturn {...state , cartItems: [...state.cartItems, item ]}\r\n\r\n    }\r\n\r\n    case CART_REMOVE_ITEM:\r\n        return{...state, cartItems: state.cartItems.filter(x => x.product !== action.payload),\r\n        \r\n        \r\n        };\r\n    default: \r\n    return state;\r\n}\r\n\r\n\r\n};"]},"metadata":{},"sourceType":"module"}