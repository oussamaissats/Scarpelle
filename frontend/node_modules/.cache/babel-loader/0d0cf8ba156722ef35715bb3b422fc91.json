{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGININ_FAIL, USER_SIGININ_REQUEST, USER_SIGININ_SUCCESS, USER_SIGNOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstants\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGININ_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGININ_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGININ_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n/*export const register = (name,email, password) => async(dispatch) =>{\r\n\r\n    dispatch({type: USER_REGISTER_REQUEST, payload:{email, password}});\r\n    try {\r\nconst {data} = await axios.post('/api/users/register', {\r\n     name ,\r\n     email, \r\n     password});\r\ndispatch({type: USER_REGISTER_SUCCESS,payload: data});\r\ndispatch({type: USER_SIGININ_SUCCESS,payload: data});\r\n\r\nlocalStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n    } catch(error){\r\n        dispatch({type:USER_REGISTER_FAIL,\r\n        payload: error.response && error.response.data.message ? error.response.data.message\r\n        : error.message,\r\n        });\r\n    }\r\n};*/\n\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGININ_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n  document.location.location.href = '/signin';\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/users/profile`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGININ_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  dispatch({\n    type: USER_LIST_REQUEST\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get('/api/users', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/GoMyCode/Projet/frontend/src/actions/userActions.js"],"names":["Axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGININ_FAIL","USER_SIGININ_REQUEST","USER_SIGININ_SUCCESS","USER_SIGNOUT","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","register","name","signout","removeItem","document","location","href","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","updateUserProfile","user","put","listUsers"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport {USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_SIGININ_FAIL,\r\n     USER_SIGININ_REQUEST, \r\n     USER_SIGININ_SUCCESS, \r\n     USER_SIGNOUT, \r\n     USER_UPDATE_PROFILE_FAIL, \r\n     USER_UPDATE_PROFILE_REQUEST,\r\n     USER_UPDATE_PROFILE_SUCCESS} from \"../constants/userConstants\"\r\n\r\nexport const signin = (email, password) => async(dispatch) =>{\r\n\r\n    dispatch({type: USER_SIGININ_REQUEST, payload:{email, password}});\r\n    try {\r\nconst {data} = await Axios.post('/api/users/signin', {email, password});\r\ndispatch({type: USER_SIGININ_SUCCESS,payload: data});\r\nlocalStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n    } catch(error){\r\n        dispatch({type:USER_SIGININ_FAIL,\r\n        payload: error.response && error.response.data.message ? error.response.data.message\r\n        : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n/*export const register = (name,email, password) => async(dispatch) =>{\r\n\r\n    dispatch({type: USER_REGISTER_REQUEST, payload:{email, password}});\r\n    try {\r\nconst {data} = await axios.post('/api/users/register', {\r\n     name ,\r\n     email, \r\n     password});\r\ndispatch({type: USER_REGISTER_SUCCESS,payload: data});\r\ndispatch({type: USER_SIGININ_SUCCESS,payload: data});\r\n\r\nlocalStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n    } catch(error){\r\n        dispatch({type:USER_REGISTER_FAIL,\r\n        payload: error.response && error.response.data.message ? error.response.data.message\r\n        : error.message,\r\n        });\r\n    }\r\n};*/\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\r\n    try {\r\n      const { data } = await Axios.post('/api/users/register', {\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n      dispatch({ type: USER_SIGININ_SUCCESS, payload: data });\r\n      localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\nexport const signout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress');\r\n    dispatch({ type: USER_SIGNOUT });\r\n    document.location.location.href = '/signin';\r\n  };\r\n\r\n  export const detailsUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.get(`/api/users/${userId}`, {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      });\r\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: USER_DETAILS_FAIL, payload: message });\r\n    }\r\n  };\r\n\r\n  export const updateUserProfile = (user) => async (dispatch, getState) => {\r\ndispatch ({type: USER_UPDATE_PROFILE_REQUEST, payload: user}) ;\r\n\r\n  const {userSignin: {userInfo}} = getState(); \r\n\r\n  try {\r\n\r\nconst {data} = await Axios.put(`/api/users/profile` , user , {\r\n\r\nheaders: {Authorization: `Bearer ${userInfo.token}` }, \r\n\r\n} );\r\n\r\ndispatch({type: USER_UPDATE_PROFILE_SUCCESS , payload: data});\r\ndispatch({type: USER_SIGININ_SUCCESS , payload: data});\r\nlocalStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch(error) {\r\n\r\n    const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n    dispatch({type: USER_UPDATE_PROFILE_FAIL , payload: message})\r\n    \r\n  }\r\n\r\n\r\n  }\r\n\r\n  export const listUsers = () => async (dispatch, getState) => {\r\n    dispatch({ type: USER_LIST_REQUEST });\r\n    try {\r\n      const {\r\n        userSignin: { userInfo },\r\n      } = getState();\r\n      const { data } = await Axios.get('/api/users', {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      });\r\n      dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: USER_LIST_FAIL, payload: message });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}